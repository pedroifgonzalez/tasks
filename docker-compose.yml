services:
  db:
    image: postgres:15
    container_name: tasks-postgres
    restart: always
    environment:
      POSTGRES_DB: tasks_app_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: tasks123
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 5

  adminer:
    image: adminer
    container_name: tasks-adminer
    restart: always
    ports:
      - "8080:8080"

  api:
    build:
      context: .
      dockerfile: Dockerfile
      network: host
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - ./src:/app/src
      - ./main.py:/app/main.py
      - ./run.py:/app/run.py
      - ./alembic.ini:/app/alembic.ini
    container_name: tasks-fastapi
    restart: always
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:tasks123@db:5432/tasks_app_db
      - WORKERS_COUNT=4
      - DB_POOL_SIZE=20
      - DB_MAX_OVERFLOW=40
      - DB_POOL_TIMEOUT=30
      - DB_POOL_RECYCLE=1800
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
